package net.vatri.inventory;

import javafx.fxml.Initializable;
import javafx.fxml.FXML;
import javafx.scene.control.TableView;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.scene.control.TableColumn;

import javafx.scene.control.Button;
import javafx.event.ActionEvent;
import javafx.scene.Parent;
import javafx.stage.Stage;
import javafx.scene.Scene;

import javafx.scene.control.TextField;
import javafx.scene.control.TextArea;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;

import javafx.scene.control.ComboBox;
import javafx.collections.ObservableList;
import javafx.collections.FXCollections;

import java.util.HashMap;
import java.util.Map;

public class AddEditOrderController extends BaseController implements Initializable{

	@FXML private TextField fldName;
    @FXML private TextField fldCity;
    @FXML private TextField fldAddress;
    @FXML private TextField fldZip;
    @FXML private TextArea fldComment;
    @FXML private ComboBox<String> comboStatus;

	@FXML private ListView<ProductModel> listAvailableProducts;
	@FXML private ListView<ProductModel> listAddedProducts;

    @FXML private Label errorLabel;
    @FXML private Label savedLabel;

    // Based on this value, we know if this is adding or editing page...
	private String _orderId = App.getInstance().repository.get("selectedOrderId");

	public void initialize(URL url, ResourceBundle rb){

		_fillAvailableProductsListView();
		
		comboStatus.getItems().addAll("in-progress", "completed");
	}

	private void _fillAvailableProductsListView(){

		ObservableList<ProductModel> items = FXCollections.observableArrayList ();

		ProductModel productModel = new ProductModel();
		// ObservableList<Map<String, String>> pg = productGroupModel.all();
		for( Map<String,String> prod : new ProductModel().all() ){

			items.add(
				new ProductModel(
					prod.get("id").toString(),
					prod.get("name").toString(),
					prod.get("price")
				)
			);
		}
		listAvailableProducts.setItems(items);
	}


	@FXML protected void selectProduct(){
		// todo...

		ObservableList<ProductModel> selectedItems = listAvailableProducts.getSelectionModel().getSelectedItems();
		// System.out.println(selectedItems);
		ObservableList<ProductModel> addedItems = listAddedProducts.getItems();
		addedItems.addAll(selectedItems);
		listAddedProducts.setItems(addedItems);
	}

	@FXML protected void removeProduct(){
		int selectedProductsIndex = listAddedProducts.getSelectionModel().getSelectedIndex();
		ObservableList<ProductModel> addedProducts = listAddedProducts.getItems();
		addedProducts.remove(selectedProductsIndex, selectedProductsIndex+1);
		listAddedProducts.setItems(addedProducts);
	}

	@FXML protected boolean save(ActionEvent event){

		OrderModel order = new OrderModel();



		order.setName(fldName.getText());
		order.setAddress(fldAddress.getText());
		order.setCity(fldCity.getText());
		order.setZip(fldZip.getText());


		order.setItems(listAddedProducts.getItems());

System.out.println("Sel:");
System.out.println(listAddedProducts.getItems());

order.save();


		// System.out.println(
		// 	"Saving order... "
		// 	+ "name: " + fldName.getText() 
		// 	+ " address:"+ fldAddress.getText() 
		// 	+ " city:" + fldCity.getText()
		// 	+ " zip:" + fldZip.getText()
		// );
		return true;
	}


}//class